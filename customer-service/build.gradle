import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

ext {
    springCloudVersion = "2023.0.0"
}

group = 'ru.clevertec.banking'
version = '0.0.1'

repositories {
    mavenCentral()
    mavenLocal()
}

java {
    sourceCompatibility = '17'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.liquibase:liquibase-core'
    implementation 'net.lbruun.springboot:preliquibase-spring-boot-starter:1.4.0'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'ru.clevertec.banking:global-exception-starter:0.0.1'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

def activeProfiles=project.properties['activeProfiles'] ?: "dev"
def port=project.properties['port'] ?: "8082"
def databasePort = getDatabasePort(activeProfiles as String)
def defaultSchema=project.properties['currentSchema'] ?: "customer"

processResources {
    filter ReplaceTokens, tokens: [
            activeProfiles: activeProfiles,
            port: port,
            databasePort: databasePort,
            defaultSchema: defaultSchema
    ]
}

static String getDatabasePort(String profile) {
    switch (profile) {
        case 'dev':
            return '5432'
        case 'prod':
            return '15432'
        case 'test':
            return '25432' // Можно настроить в зависимости от наших профилей, на каком порту БД поднимать
        default:
            return '5432'
    }
}

test {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}